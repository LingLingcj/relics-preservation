server:
  port: 8080

spring:
  datasource: # MySQL数据源配置（用于用户登录等核心业务）
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3309/relics?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai&useSSL=true

  ai:
    vectorstore:
      pgvector: # PostgreSQL数据源配置（用于向量存储）
        url: jdbc:postgresql://localhost:5433/springai
        username: postgres
        password: postgres

    openai:
      base-url: https://api.chatanywhere.tech
      api-key: xxx
      chat:
        options:
          model: gpt-4.1-mini
      embedding:
        options:
          num-batch: 1536
          model: text-embedding-3-small
  # Jackson JSON序列化配置
  jackson:
    # 日期格式化
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
    # 序列化配置
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    # 反序列化配置
    deserialization:
      fail-on-unknown-properties: false
    # 默认属性包含策略
    default-property-inclusion: non_null
    # 属性命名策略
    property-naming-strategy: LOWER_CAMEL_CASE

mybatis-plus:
  mapper-locations: classpath:/mybatis/*.xml

# Redis
redis:
  sdk:
    config:
      host: localhost
      port: 26379
      pool-size: 10
      min-idle-size: 5
      idle-timeout: 30000
      connect-timeout: 5000
      retry-attempts: 3
      retry-interval: 1000
      ping-interval: 60000
      keep-alive: true

# JWT配置
jwt:
  # 使用长度至少为32个字符的密钥（256位）
  secret: mySecretKey123456789012345678901234567890ABCDEFGHIJKLMNOPQRST
  expiration: 86400 # 24小时

# 日志配置
logging:
  level:
    com.ling: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Swagger文档配置
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    tags-sorter: alpha
    operations-sorter: method
  show-actuator: false
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# MQTT配置
mqtt:
  broker:
    url: tcp://localhost:1883
  client:
    id: relics-preservation-client
  username: mqtt_user
  password: mqtt_password
  topic:
    sensor: sensor/+/data
